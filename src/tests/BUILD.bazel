## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
    "ppx_executable",
)
load(
    "//:BUILD.bzl",
    "GLOBAL_ARCHIVE_OPTS",
    "GLOBAL_MODULE_OPTS",
    "GLOBAL_NS_MODULE_OPTS",
    "GLOBAL_PPX_EXECUTABLE_OPTS",
)
load(
    "//snarky:BUILD.bzl",
    "REPO_ARCHIVE_OPTS",
    "REPO_MODULE_OPTS",
    "REPO_NS_MODULE_OPTS",
    "REPO_PPX_EXECUTABLE_OPTS",
)
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

PKG_DEBUG_OPT = select({
    ":enable_debug": ["-g"],
    "//conditions:default": [],
})

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)

PKG_VERBOSE_OPT = select({
    ":enable_verbose": ["-verbose"],
    "//conditions:default": [],
})

PKG_OPTS = PKG_DEBUG_OPT + PKG_VERBOSE_OPT

PKG_PPX_EXECUTABLE_OPTS = PKG_OPTS

PKG_ARCHIVE_OPTS = PKG_OPTS

PKG_NS_MODULE_OPTS = PKG_OPTS

PKG_MODULE_OPTS = PKG_OPTS

## stanza_library.mustache
################################################################
## STANZA 1: LIBRARY SNARKY_TESTS
################################################################
SNARKY_TESTS_MODULE_OPTS = GLOBAL_MODULE_OPTS + REPO_MODULE_OPTS + PKG_MODULE_OPTS

SNARKY_TESTS_ARCHIVE_OPTS = GLOBAL_ARCHIVE_OPTS + REPO_ARCHIVE_OPTS + PKG_ARCHIVE_OPTS + []

SNARKY_TESTS_NS_MODULE_OPTS = GLOBAL_NS_MODULE_OPTS + REPO_NS_MODULE_OPTS + PKG_NS_MODULE_OPTS

SNARKY_TESTS_DEPS = [
    # do not sort (buildifier)
    "@snarky//src:snarky",
]

ocaml_archive(
    name = "snarky_tests",
    opts = SNARKY_TESTS_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = SNARKY_TESTS_DEPS + [
        # do not sort (buildifier)
        ":_Snark0_test",
    ],
)

ocaml_ns(
    name = "Snarky_tests_ns",
    ns = "snarky_tests",
    opts = SNARKY_TESTS_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "snark0_test.ml",
    ],
)

## ocaml_module.mustache
#############
ocaml_module(
    name = "_Snark0_test",
    src = "snark0_test.ml",
    ns = ":Snarky_tests_ns",
    opts = SNARKY_TESTS_MODULE_OPTS,
    ppx = ":ppx.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarky_tests",
    ],
    deps = SNARKY_TESTS_DEPS,
)

## ppx_executable.mustache
###############
ppx_executable(
    name = "ppx.exe",
    lazy_deps = [
        # do not sort (buildifier)
        "@opam//pkg:ppx_inline_test.runtime-lib",
    ],
    main = "//bzl/ppx:Driver",
    opts = GLOBAL_PPX_EXECUTABLE_OPTS + REPO_PPX_EXECUTABLE_OPTS + PKG_PPX_EXECUTABLE_OPTS,
    visibility = [
        "//src/tests:__pkg__",
    ],
    deps = [
        # do not sort (buildifier)
        "@opam//pkg:ppx_inline_test",
        "@opam//pkg:ppx_let",
    ],
)
