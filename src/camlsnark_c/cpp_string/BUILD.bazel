load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_interface",
    "ocaml_module",
)
load(
    "//:BUILD.bzl",
    "GLOBAL_INTERFACE_OPTS",
    "GLOBAL_MODULE_OPTS",
)
load(
    "//snarky:BUILD.bzl",
    "REPO_INTERFACE_OPTS",
    "REPO_MODULE_OPTS",
)

PKG_DEBUG_OPT = select({":enable_debug": ["-g"], "//conditions:default": []})
PKG_VERBOSE_OPT = select({":enable_verbose": ["-verbose"], "//conditions:default": []})
PKG_INTERFACE_OPTS = PKG_DEBUG_OPT + PKG_VERBOSE_OPT
PKG_MODULE_OPTS = PKG_INTERFACE_OPTS

################################################################
## STANZA 1: SNARKY_CPP_STRING
################################################################
SNARKY_CPP_STRING_INTERFACE_OPTS = []
SNARKY_CPP_STRING_MODULE_OPTS = GLOBAL_MODULE_OPTS + REPO_MODULE_OPTS + PKG_MODULE_OPTS + []
SNARKY_CPP_STRING_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core",
    "@snarky//src/camlsnark_c",
]

ocaml_module(
    name = "snarky_cpp_string",
    src = "snarky_cpp_string.ml",
    intf = ":_Snarky_cpp_string",
    opts = SNARKY_CPP_STRING_MODULE_OPTS,
    deps = SNARKY_CPP_STRING_DEPS,
    visibility = ["//visibility:public"]
)

ocaml_interface(
    name = "_Snarky_cpp_string",
    src = "snarky_cpp_string.mli",
    opts = SNARKY_CPP_STRING_INTERFACE_OPTS,
    deps = SNARKY_CPP_STRING_DEPS,
)

################################################################
#### Package CLI Options
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)
