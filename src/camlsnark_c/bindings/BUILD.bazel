## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns_module",
)
load(
    "//:BUILD.bzl",
    "GLOBAL_ARCHIVE_OPTS",
    "GLOBAL_INTERFACE_OPTS",
    "GLOBAL_MODULE_OPTS",
    "GLOBAL_NS_MODULE_OPTS",
    "REPO_ARCHIVE_OPTS",
    "REPO_INTERFACE_OPTS",
    "REPO_MODULE_OPTS",
    "REPO_NS_MODULE_OPTS",
)
load(
    ":BUILD.bzl",
    "PKG_ARCHIVE_OPTS",
    "PKG_INTERFACE_OPTS",
    "PKG_MODULE_OPTS",
    "PKG_NS_MODULE_OPTS",
)

################################################################
## STANZA 1: CAMLSNARK_C_BINDINGS
################################################################
CAMLSNARK_C_BINDINGS_ARCHIVE_OPTS = GLOBAL_ARCHIVE_OPTS + REPO_ARCHIVE_OPTS + PKG_ARCHIVE_OPTS + []

CAMLSNARK_C_BINDINGS_INTERFACE_OPTS = []

CAMLSNARK_C_BINDINGS_MODULE_OPTS = GLOBAL_MODULE_OPTS + REPO_MODULE_OPTS + PKG_MODULE_OPTS + []

CAMLSNARK_C_BINDINGS_NS_MODULE_OPTS = []

CAMLSNARK_C_BINDINGS_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core",
    "@opam//pkg:ctypes",
    "@opam//pkg:ctypes.foreign",
]

ocaml_archive(
    name = "camlsnark_c_bindings",
    opts = CAMLSNARK_C_BINDINGS_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = CAMLSNARK_C_BINDINGS_DEPS + [
        # do not sort (buildifier)
        ":Backend_types",
        ":Bindings",
        ":Bindings_base",
        ":Vector",
    ],
)

ocaml_ns_module(
    name = "Camlsnark_c_bindings_ns",
    ns = "camlsnark_c_bindings",
    opts = CAMLSNARK_C_BINDINGS_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "backend_types.ml",
        "bindings.ml",
        "bindings_base.ml",
        "vector.ml",
    ],
)

ocaml_module(
    name = "Backend_types",
    src = "backend_types.ml",
    intf = ":_Backend_types",
    ns_module = ":Camlsnark_c_bindings_ns",
    opts = CAMLSNARK_C_BINDINGS_MODULE_OPTS,
    deps = CAMLSNARK_C_BINDINGS_DEPS + [
        # do not sort (buildifier)
        ":Bindings_base",
    ],
)

ocaml_interface(
    name = "_Backend_types",
    src = "backend_types.mli",
    ns_module = ":Camlsnark_c_bindings_ns",
    opts = CAMLSNARK_C_BINDINGS_INTERFACE_OPTS,
    deps = CAMLSNARK_C_BINDINGS_DEPS + [
        # do not sort (buildifier)
        ":Bindings_base",
    ],
)

ocaml_module(
    name = "Bindings",
    src = "bindings.ml",
    ns_module = ":Camlsnark_c_bindings_ns",
    opts = CAMLSNARK_C_BINDINGS_MODULE_OPTS,
    deps = CAMLSNARK_C_BINDINGS_DEPS + [
        # do not sort (buildifier)
        ":Backend_types",
        ":Bindings_base",
        ":Vector",
    ],
)

ocaml_module(
    name = "Bindings_base",
    src = "bindings_base.ml",
    ns_module = ":Camlsnark_c_bindings_ns",
    opts = CAMLSNARK_C_BINDINGS_MODULE_OPTS,
    deps = CAMLSNARK_C_BINDINGS_DEPS,
)

ocaml_module(
    name = "Vector",
    src = "vector.ml",
    intf = ":_Vector",
    ns_module = ":Camlsnark_c_bindings_ns",
    opts = CAMLSNARK_C_BINDINGS_MODULE_OPTS,
    deps = CAMLSNARK_C_BINDINGS_DEPS + [
        # do not sort (buildifier)
        ":Bindings_base",
    ],
)

ocaml_interface(
    name = "_Vector",
    src = "vector.mli",
    ns_module = ":Camlsnark_c_bindings_ns",
    opts = CAMLSNARK_C_BINDINGS_INTERFACE_OPTS,
    deps = CAMLSNARK_C_BINDINGS_DEPS + [
        # do not sort (buildifier)
        ":Bindings_base",
    ],
)

################################################################
#### Package CLI Options
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)
