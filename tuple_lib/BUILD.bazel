## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns_module",
)
load(
    "//:BUILD.bzl",
    "GLOBAL_ARCHIVE_OPTS",
    "GLOBAL_INTERFACE_OPTS",
    "GLOBAL_MODULE_OPTS",
    "GLOBAL_NS_MODULE_OPTS",
    "REPO_ARCHIVE_OPTS",
    "REPO_INTERFACE_OPTS",
    "REPO_MODULE_OPTS",
    "REPO_NS_MODULE_OPTS",
)
load(
    ":BUILD.bzl",
    "PKG_ARCHIVE_OPTS",
    "PKG_INTERFACE_OPTS",
    "PKG_MODULE_OPTS",
    "PKG_NS_MODULE_OPTS",
)

################################################################
## STANZA 1: TUPLE_LIB
################################################################
TUPLE_LIB_ARCHIVE_OPTS = GLOBAL_ARCHIVE_OPTS + REPO_ARCHIVE_OPTS + PKG_ARCHIVE_OPTS + ["-linkall"]

TUPLE_LIB_INTERFACE_OPTS = []

TUPLE_LIB_MODULE_OPTS = GLOBAL_MODULE_OPTS + REPO_MODULE_OPTS + PKG_MODULE_OPTS + []

TUPLE_LIB_NS_MODULE_OPTS = []

TUPLE_LIB_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core_kernel",
]

TUPLE_LIB_PPX = "//bzl/ppx:ppx[ppx_jane][ppx_deriving.eq][bisect_ppx]"

TUPLE_LIB_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "tuple_lib",
    "-conditional",
]

ocaml_archive(
    name = "tuple_lib",
    doc = "Tuple types",
    opts = TUPLE_LIB_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":Double",
        ":Four",
        ":Intf",
        ":Quadruple",
        ":Triple",
        ":Tuple_lib",
    ],
)

ocaml_ns_module(
    name = "Tuple_lib_ns",
    ns = "tuple_lib",
    opts = TUPLE_LIB_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "double.ml",
        "four.ml",
        "intf.ml",
        "quadruple.ml",
        "triple.ml",
        "tuple_lib.ml",
    ],
)

ocaml_module(
    name = "Double",
    src = "double.ml",
    intf = ":_Double",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS,
)

ocaml_interface(
    name = "_Double",
    src = "double.mli",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_INTERFACE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":Intf",
    ],
)

ocaml_module(
    name = "Four",
    src = "four.ml",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":Double",
    ],
)

ocaml_module(
    name = "Intf",
    src = "intf.ml",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS,
)

ocaml_module(
    name = "Quadruple",
    src = "quadruple.ml",
    intf = ":_Quadruple",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":Four",
    ],
)

ocaml_interface(
    name = "_Quadruple",
    src = "quadruple.mli",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_INTERFACE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":Four",
        ":Intf",
    ],
)

ocaml_module(
    name = "Triple",
    src = "triple.ml",
    intf = ":_Triple",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS,
)

ocaml_interface(
    name = "_Triple",
    src = "triple.mli",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_INTERFACE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":Intf",
    ],
)

ocaml_module(
    name = "Tuple_lib",
    src = "tuple_lib.ml",
    ns_module = ":Tuple_lib_ns",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps = TUPLE_LIB_DEPS + [
        # do not sort (buildifier)
        ":Double",
        ":Four",
        ":Quadruple",
        ":Triple",
    ],
)

################################################################
#### Package CLI Options
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)
