load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_signature",
    "ocaml_module",
    "ocaml_ns_archive",
)

PPX_PRINT = "@ppx//print:binary"

################################################################
## STANZA 1: LIBRARY TUPLE_LIB
################################################################
TUPLE_LIB_SIGNATURE_OPTS = []

TUPLE_LIB_MODULE_OPTS = []

TUPLE_LIB_DEPS_OPAM = [
    # do not sort (buildifier)
    "core_kernel",
]

TUPLE_LIB_PPX = "@//bzl/ppx/exe:ppx_jane__ppx_deriving.eq"

TUPLE_LIB_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "tuple_lib",
]

#########
ocaml_ns_archive(
    name = "tuple_lib",
    submodules = [
        ":_Double",
        ":_Four",
        ":_Intf",
        ":_Quadruple",
        ":_Triple",
        ":_Tuple_lib"
    ],
    visibility = [
        "//visibility:public"
    ]
)

#############
ocaml_module(
    name = "_Double",
    struct = "double.ml",
    sig  = ":_Double.cmi",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    ppx_print = PPX_PRINT,  # obazl:retain
    deps_opam = TUPLE_LIB_DEPS_OPAM,
)

ocaml_signature(
    name = "_Double.cmi",
    src = "double.mli",
    opts = TUPLE_LIB_SIGNATURE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps_opam = TUPLE_LIB_DEPS_OPAM,
	deps = [
        # do not sort (buildifier)
        ":_Intf",
    ],
)

#############
ocaml_module(
    name = "_Four",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    struct = "four.ml",
    deps_opam = TUPLE_LIB_DEPS_OPAM,
	deps = [
        # do not sort (buildifier)
        ":_Double",
    ],
)

#############
ocaml_module(
    name = "_Intf",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    struct = "intf.ml",
    deps_opam = TUPLE_LIB_DEPS_OPAM,
)

#############
ocaml_module(
    name = "_Quadruple",
    sig  = ":_Quadruple.cmi",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    ppx_print = PPX_PRINT,  # obazl:retain
    struct = "quadruple.ml",
    deps_opam = TUPLE_LIB_DEPS_OPAM,
	deps = [
        # do not sort (buildifier)
        ":_Four",
    ],
)

################
ocaml_signature(
    name = "_Quadruple.cmi",
    src = "quadruple.mli",
    opts = TUPLE_LIB_SIGNATURE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps_opam = TUPLE_LIB_DEPS_OPAM,
	deps = [
        # do not sort (buildifier)
        ":_Four",
        ":_Intf",
    ],
)

#############
ocaml_module(
    name = "_Triple",
    sig  = ":_Triple.cmi",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    ppx_print = PPX_PRINT,  # obazl:retain
    struct = "triple.ml",
    deps_opam = TUPLE_LIB_DEPS_OPAM,
)

################
ocaml_signature(
    name = "_Triple.cmi",
    src = "triple.mli",
    opts = TUPLE_LIB_SIGNATURE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    deps_opam = TUPLE_LIB_DEPS_OPAM,
	deps = [
        # do not sort (buildifier)
        ":_Intf",
    ],
)

#############
ocaml_module(
    name = "_Tuple_lib",
    opts = TUPLE_LIB_MODULE_OPTS,
    ppx = TUPLE_LIB_PPX,
    ppx_args = TUPLE_LIB_PPX_ARGS,
    struct = "tuple_lib.ml",
    deps_opam = TUPLE_LIB_DEPS_OPAM,
	deps = [
        # do not sort (buildifier)
        ":_Double",
        ":_Four",
        ":_Quadruple",
        ":_Triple",
    ],
)
