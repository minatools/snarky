## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.
## Bazel package: @snarky//src/lib/baze58_check
## Dune file: /Users/gar/mina/snarky/snarkette/dune

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns_module",
)

## Global Options
load(
    "//bzl:config.bzl",
    "ARCHIVE_OPTS",
    "GLOBAL_CLI_OPTS",
    "INTERFACE_OPTS",
    "MODULE_OPTS",
    "NS_MODULE_OPTS",
)

## Repo Options
load("//bzl/snarky:config.bzl", "SNARKY_OPTS")

PKG_OPTS = GLOBAL_CLI_OPTS + SNARKY_OPTS + []

LIB_1_OPTS = []

LIB_1_ARCHIVE_OPTS = PKG_OPTS + LIB_1_OPTS + ARCHIVE_OPTS

LIB_1_INTERFACE_OPTS = PKG_OPTS + LIB_1_OPTS + INTERFACE_OPTS

LIB_1_MODULE_OPTS = PKG_OPTS + LIB_1_OPTS + MODULE_OPTS

LIB_1_NS_MODULE_OPTS = PKG_OPTS + LIB_1_OPTS + NS_MODULE_OPTS

LIB_1_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:num",
    "@opam//pkg:core_kernel",
    "@opam//pkg:bignum",
    "@snarky//tuple_lib",
    "@snarky//fold_lib",
]

PPX_1 = "//bzl/ppx:ppx[ppx_jane][ppx_deriving.eq][ppx_deriving_yojson]"

PPX_1_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "snarkette",
]

################################################################
## LIB 1
################################################################
ocaml_archive(
    name = "snarkette",
    opts = LIB_1_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Snarkette_ns",
        ":Bowe_gabizon",
        ":Elliptic_curve",
        ":Elliptic_curve_intf",
        ":Fields",
        ":Groth16",
        ":Groth_maller",
        ":Mnt4753",
        ":Mnt4_80",
        ":Mnt6753",
        ":Mnt6_80",
        ":Nat",
        ":Nat_intf",
        ":Pairing",
        ":Tweedle",
    ],
)

ocaml_ns_module(
    name = "Snarkette_ns",
    ns = "snarkette",
    opts = LIB_1_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "bowe_gabizon.ml",
        "elliptic_curve.ml",
        "elliptic_curve_intf.ml",
        "fields.ml",
        "groth16.ml",
        "groth_maller.ml",
        "mnt4753.ml",
        "mnt4_80.ml",
        "mnt6753.ml",
        "mnt6_80.ml",
        "nat.ml",
        "nat_intf.ml",
        "pairing.ml",
        "tweedle.ml",
    ],
)

ocaml_module(
    name = "Bowe_gabizon",
    src = "bowe_gabizon.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Fields",
        ":Nat_intf",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Elliptic_curve",
    src = "elliptic_curve.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "Elliptic_curve_intf",
    src = "elliptic_curve_intf.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
)

ocaml_module(
    name = "Fields",
    src = "fields.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Nat",
        ":Nat_intf",
    ],
)

ocaml_module(
    name = "Groth16",
    src = "groth16.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Fields",
        ":Nat_intf",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Groth_maller",
    src = "groth_maller.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Fields",
        ":Nat_intf",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Mnt4753",
    src = "mnt4753.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Elliptic_curve",
        ":Fields",
        ":Nat",
    ],
)

ocaml_module(
    name = "Mnt4_80",
    src = "mnt4_80.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Elliptic_curve",
        ":Fields",
        ":Nat",
    ],
)

ocaml_module(
    name = "Mnt6753",
    src = "mnt6753.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Bowe_gabizon",
        ":Elliptic_curve",
        ":Fields",
        ":Groth16",
        ":Groth_maller",
        ":Nat",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Mnt6_80",
    src = "mnt6_80.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Bowe_gabizon",
        ":Elliptic_curve",
        ":Fields",
        ":Groth16",
        ":Groth_maller",
        ":Nat",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Nat",
    src = "nat.ml",
    intf = "_Nat",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
    ],
)

ocaml_interface(
    name = "_Nat",
    src = "nat.mli",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_INTERFACE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:private"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Nat_intf",
    ],
)

ocaml_module(
    name = "Nat_intf",
    src = "nat_intf.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
    ],
)

ocaml_module(
    name = "Pairing",
    src = "pairing.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Fields",
    ],
)

ocaml_module(
    name = "Tweedle",
    src = "tweedle.ml",
    ns_module = ":Snarkette_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Elliptic_curve",
        ":Fields",
        ":Nat",
    ],
)
