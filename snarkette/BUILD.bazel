## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns_module",
)
load(
    "//:BUILD.bzl",
    "GLOBAL_ARCHIVE_OPTS",
    "GLOBAL_INTERFACE_OPTS",
    "GLOBAL_MODULE_OPTS",
    "GLOBAL_NS_MODULE_OPTS",
)
load(
    "//snarky:BUILD.bzl",
    "REPO_ARCHIVE_OPTS",
    "REPO_INTERFACE_OPTS",
    "REPO_MODULE_OPTS",
    "REPO_NS_MODULE_OPTS",
)
load(
    ":BUILD.bzl",
    "PKG_ARCHIVE_OPTS",
    "PKG_INTERFACE_OPTS",
    "PKG_MODULE_OPTS",
    "PKG_NS_MODULE_OPTS",
)

################################################################
## STANZA 1: SNARKETTE
################################################################
SNARKETTE_ARCHIVE_OPTS = GLOBAL_ARCHIVE_OPTS + REPO_ARCHIVE_OPTS + PKG_ARCHIVE_OPTS + []

SNARKETTE_INTERFACE_OPTS = []

SNARKETTE_MODULE_OPTS = GLOBAL_MODULE_OPTS + REPO_MODULE_OPTS + PKG_MODULE_OPTS + []

SNARKETTE_NS_MODULE_OPTS = []

SNARKETTE_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:num",
    "@opam//pkg:core_kernel",
    "@opam//pkg:bignum",
    "@snarky//tuple_lib",
    "@snarky//fold_lib",
]

SNARKETTE_PPX = "@//bzl/ppx:ppx[ppx_jane][ppx_deriving.eq][ppx_deriving_yojson]"

SNARKETTE_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "snarkette",
]

ocaml_archive(
    name = "snarkette",
    opts = SNARKETTE_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Bowe_gabizon",
        ":Elliptic_curve",
        ":Elliptic_curve_intf",
        ":Fields",
        ":Groth16",
        ":Groth_maller",
        ":Mnt4753",
        ":Mnt4_80",
        ":Mnt6753",
        ":Mnt6_80",
        ":Nat",
        ":Nat_intf",
        ":Pairing",
        ":Tweedle",
    ],
)

ocaml_ns_module(
    name = "Snarkette_ns",
    ns = "snarkette",
    opts = SNARKETTE_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "bowe_gabizon.ml",
        "elliptic_curve.ml",
        "elliptic_curve_intf.ml",
        "fields.ml",
        "groth16.ml",
        "groth_maller.ml",
        "mnt4753.ml",
        "mnt4_80.ml",
        "mnt6753.ml",
        "mnt6_80.ml",
        "nat.ml",
        "nat_intf.ml",
        "pairing.ml",
        "tweedle.ml",
    ],
)

ocaml_module(
    name = "Bowe_gabizon",
    src = "bowe_gabizon.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Fields",
        ":Nat_intf",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Elliptic_curve",
    src = "elliptic_curve.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS,
)

ocaml_module(
    name = "Elliptic_curve_intf",
    src = "elliptic_curve_intf.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS,
)

ocaml_module(
    name = "Fields",
    src = "fields.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Nat",
        ":Nat_intf",
    ],
)

ocaml_module(
    name = "Groth16",
    src = "groth16.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Fields",
        ":Nat_intf",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Groth_maller",
    src = "groth_maller.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Fields",
        ":Nat_intf",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Mnt4753",
    src = "mnt4753.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Elliptic_curve",
        ":Fields",
        ":Nat",
    ],
)

ocaml_module(
    name = "Mnt4_80",
    src = "mnt4_80.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Elliptic_curve",
        ":Fields",
        ":Nat",
    ],
)

ocaml_module(
    name = "Mnt6753",
    src = "mnt6753.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Bowe_gabizon",
        ":Elliptic_curve",
        ":Fields",
        ":Groth16",
        ":Groth_maller",
        ":Nat",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Mnt6_80",
    src = "mnt6_80.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Bowe_gabizon",
        ":Elliptic_curve",
        ":Fields",
        ":Groth16",
        ":Groth_maller",
        ":Nat",
        ":Pairing",
    ],
)

ocaml_module(
    name = "Nat",
    src = "nat.ml",
    intf = ":_Nat",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS,
)

ocaml_interface(
    name = "_Nat",
    src = "nat.mli",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_INTERFACE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Nat_intf",
    ],
)

ocaml_module(
    name = "Nat_intf",
    src = "nat_intf.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS,
)

ocaml_module(
    name = "Pairing",
    src = "pairing.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Fields",
    ],
)

ocaml_module(
    name = "Tweedle",
    src = "tweedle.ml",
    ns_module = ":Snarkette_ns",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = SNARKETTE_PPX,
    ppx_args = SNARKETTE_PPX_ARGS,
    deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":Elliptic_curve",
        ":Fields",
        ":Nat",
    ],
)

################################################################
#### Package CLI Options
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)
