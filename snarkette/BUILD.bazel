load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    # "ocaml_archive",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_ns_library",
    "ocaml_signature",
    "ppx_executable",
)

################################################################
## STANZA 1: LIBRARY SNARKETTE
################################################################
SNARKETTE_MODULE_OPTS = []

SNARKETTE_DEPS = [
    # do not sort (buildifier)
    "//tuple_lib",
    "//fold_lib",
]
SNARKETTE_DEPS_OPAM = [
    "num",
    "core_kernel",
    "bignum",
]

#########
ocaml_ns_library(
    name = "snarkette",
    # ns_env = "snarkette",
    submodules = {
        ":_Bowe_gabizon": "Bowe_gabizon",
        ":_Elliptic_curve": "Elliptic_curve",
        ":_Elliptic_curve_intf": "Elliptic_curve_intf",
        ":_Fields": "Fields",
        ":_Groth16": "Groth16",
        ":_Groth_maller": "Groth_maller",
        ":_Mnt4753": "Mnt4753",
        ":_Mnt4_80": "Mnt4_80",
        ":_Mnt6753": "Mnt6753",
        ":_Mnt6_80": "Mnt6_80",
        ":_Nat": "Nat",
        ":_Nat_intf": "Nat_intf",
        ":_Pairing": "Pairing",
        ":_Tweedle": "Tweedle",
    },
    visibility = ["//visibility:public"]
)

#############
ocaml_module(
    name = "_Bowe_gabizon",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "bowe_gabizon.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Fields",
        ":_Nat_intf",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Elliptic_curve",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "elliptic_curve.ml",
    deps = SNARKETTE_DEPS,
    deps_opam = SNARKETTE_DEPS_OPAM
)

#############
ocaml_module(
    name = "_Elliptic_curve_intf",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "elliptic_curve_intf.ml",
    deps = SNARKETTE_DEPS,
)

#############
ocaml_module(
    name = "_Fields",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "fields.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Nat",
        ":_Nat_intf",
    ],
)

#############
ocaml_module(
    name = "_Groth16",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "groth16.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Fields",
        ":_Nat_intf",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Groth_maller",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "groth_maller.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Fields",
        ":_Nat_intf",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Mnt4753",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "mnt4753.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Elliptic_curve",
        ":_Fields",
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Mnt4_80",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "mnt4_80.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Elliptic_curve",
        ":_Fields",
        ":_Nat",
    ],
)

#############
ocaml_module(
    name = "_Mnt6753",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "mnt6753.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Bowe_gabizon",
        ":_Elliptic_curve",
        ":_Fields",
        ":_Groth16",
        ":_Groth_maller",
        ":_Nat",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Mnt6_80",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "mnt6_80.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Bowe_gabizon",
        ":_Elliptic_curve",
        ":_Fields",
        ":_Groth16",
        ":_Groth_maller",
        ":_Nat",
        ":_Pairing",
    ],
)

#############
ocaml_module(
    name = "_Nat",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    sig = ":_Nat.cmi",
    struct = "nat.ml",
    deps = SNARKETTE_DEPS,
    deps_opam = SNARKETTE_DEPS_OPAM,
)

ocaml_signature(
    name   = "_Nat.cmi",
    src    = "nat.mli",
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Nat_intf",
    ],
)

#############
ocaml_module(
    name = "_Nat_intf",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "nat_intf.ml",
    deps = SNARKETTE_DEPS,
    deps_opam = SNARKETTE_DEPS_OPAM,
)

#############
ocaml_module(
    name = "_Pairing",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "pairing.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Fields",
    ],
)

#############
ocaml_module(
    name = "_Tweedle",
    opts = SNARKETTE_MODULE_OPTS,
    ppx = ":ppx1.exe",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "snarkette",
    ],
    struct = "tweedle.ml",
    deps_opam = SNARKETTE_DEPS_OPAM,
	deps = SNARKETTE_DEPS + [
        # do not sort (buildifier)
        ":_Elliptic_curve",
        ":_Fields",
        ":_Nat",
    ],
)

###############
ppx_executable(
    name = "ppx1.exe",
    main = "//bzl/ppx/exe:ppxlib_driver",
    opts = [],
    visibility = [
        "//snarkette:__pkg__",
    ],
    deps_adjunct_opam = [
        "ppx_expect.collector",
        "yojson",
        "ppx_hash.runtime-lib",
        "ppx_deriving_yojson.runtime",
        "ppx_sexp_conv.runtime-lib",
        "ppx_deriving.runtime",
        "ppx_assert.runtime-lib",
        "ppx_compare.runtime-lib",
        "ppx_inline_test.runtime-lib",
        "ppx_bench.runtime-lib",
        "ppx_enumerate.runtime-lib",
        "ppx_module_timer.runtime",
    ],
    deps_opam = [
        "ppx_deriving.eq",
        "ppx_deriving_yojson",
        "ppx_jane",
        "ppxlib",
    ],
)
