load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag", "string_setting")

#################################################
####    GLOBAL/SHARED CONFIG SETTING DEPS    ####

## OCaml
#### control -linkall compile flag
string_flag( name = "link", build_setting_default = "on_demand",
             values = ["always", "on_demand"],
             visibility = ["//visibility:public"])

#### control linking cc libs to ocaml
string_flag( name = "cc_linkage", build_setting_default = "dynamic",
             values = ["dynamic", "static"],
             visibility = ["//visibility:public"])

#### control -dump-ast flag
string_flag( name = "ppx_format", build_setting_default = "binary",
             values = ["binary", "text"],
             visibility = ["//visibility:public"])

bool_flag( name = "enable_gpu", build_setting_default = False,
           visibility = ["//visibility:public"])

################################################################
## C/C++

## Upstream
string_flag( name = "curve", build_setting_default = "bn128",
             values = ["bn128", "alt_bn128", "edwards", "mnt4", "mnt6"],
             visibility = ["//bzl/config:__pkg__",
                           "@libff//bzl/config:__pkg__"])
             # visibility = ["//visibility:public"])

## Downstream

# ## serialization: libfqfft, libff
# bool_flag( name = "binary_output", build_setting_default = True,
#            visibility = ["//bzl/config:__pkg__"])

# libsnark, libfqfft:
bool_flag( name = "with_openmp", build_setting_default = False,
           visibility = ["//visibility:public"])

# ate-pairing flag:
bool_flag( name = "with_libgmp", build_setting_default = True,
           visibility = ["//visibility:public"])

# ate-pairing config setting:
config_setting( name = "enable_snark", flag_values = { ":curve": "bn128" },
                visibility = ["//visibility:public"])

################################################################
bool_flag( name = "debug", build_setting_default = False,
           visibility = ["//visibility:public"])

bool_flag( name = "cxx_debug", build_setting_default = False,
           visibility = ["//visibility:public"])

bool_flag( name = "verbose", build_setting_default = False,
           visibility = ["//visibility:public"])
