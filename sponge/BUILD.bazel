load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

################################################################
## STANZA 1: LIBRARY SPONGE
################################################################
SPONGE_DEPS_OPAM = ["core_kernel"]

SPONGE_PPX = "@//bzl/ppx/exe:ppx_jane__ppx_deriving.eq"

SPONGE_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "sponge",
]

#########
ocaml_ns_archive(
    name = "sponge",
    submodules = {
        ":_Constants": "Constants",
        ":_Intf": "Intf",
        ":_Params":"Params",
        ":_Sponge": "Sponge",
    },
    visibility = ["//visibility:public"]
)

#############
ocaml_module(
    name = "_Constants",
    struct = "constants.ml",
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps_opam = SPONGE_DEPS_OPAM,
    deps = [
        # do not sort (buildifier)
        ":_Params",
    ],
)

#############
ocaml_module(
    name = "_Intf",
    struct = "intf.ml",
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps_opam = SPONGE_DEPS_OPAM,
    deps = [
        # do not sort (buildifier)
        ":_Params",
    ],
)

#############
ocaml_module(
    name = "_Params",
    struct = "params.ml",
    # ns_env = ":_ns_env",
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps_opam = SPONGE_DEPS_OPAM
)

#############
ocaml_module(
    name   = "_Sponge",
    struct = "sponge.ml",
    sig    = ":_Sponge.cmi",
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    ppx_print = "@ppx//print:text",
    deps_opam = SPONGE_DEPS_OPAM,
    deps = [
        # do not sort (buildifier)
        ":_Constants",
        ":_Intf",
        ":_Params",
    ],
)

################
ocaml_signature(
    name   = "_Sponge.cmi",
    src    = "sponge.mli",
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps_opam = SPONGE_DEPS_OPAM,
    deps = [
        # do not sort (buildifier)
        ":_Intf",
        ":_Params",
    ],
)
