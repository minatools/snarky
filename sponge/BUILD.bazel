## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns_module",
)
load(
    "//:BUILD.bzl",
    "GLOBAL_ARCHIVE_OPTS",
    "GLOBAL_INTERFACE_OPTS",
    "GLOBAL_MODULE_OPTS",
    "GLOBAL_NS_MODULE_OPTS",
    "REPO_ARCHIVE_OPTS",
    "REPO_INTERFACE_OPTS",
    "REPO_MODULE_OPTS",
    "REPO_NS_MODULE_OPTS",
)
load(
    ":BUILD.bzl",
    "PKG_ARCHIVE_OPTS",
    "PKG_INTERFACE_OPTS",
    "PKG_MODULE_OPTS",
    "PKG_NS_MODULE_OPTS",
)

################################################################
## STANZA 1: SPONGE
################################################################
SPONGE_ARCHIVE_OPTS = GLOBAL_ARCHIVE_OPTS + REPO_ARCHIVE_OPTS + PKG_ARCHIVE_OPTS + []

SPONGE_INTERFACE_OPTS = []

SPONGE_MODULE_OPTS = GLOBAL_MODULE_OPTS + REPO_MODULE_OPTS + PKG_MODULE_OPTS + []

SPONGE_NS_MODULE_OPTS = []

SPONGE_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:core_kernel",
]

SPONGE_PPX = "//bzl/ppx:ppx[ppx_jane][ppx_deriving.eq]"

SPONGE_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "sponge",
]

ocaml_archive(
    name = "sponge",
    opts = SPONGE_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = SPONGE_DEPS + [
        # do not sort (buildifier)
        ":Constants",
        ":Intf",
        ":Params",
        ":Sponge",
    ],
)

ocaml_ns_module(
    name = "Sponge_ns",
    ns = "sponge",
    opts = SPONGE_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "constants.ml",
        "intf.ml",
        "params.ml",
        "sponge.ml",
    ],
)

ocaml_module(
    name = "Constants",
    src = "constants.ml",
    ns_module = ":Sponge_ns",
    opts = SPONGE_MODULE_OPTS,
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps = SPONGE_DEPS + [
        # do not sort (buildifier)
        ":Params",
    ],
)

ocaml_module(
    name = "Intf",
    src = "intf.ml",
    ns_module = ":Sponge_ns",
    opts = SPONGE_MODULE_OPTS,
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps = SPONGE_DEPS + [
        # do not sort (buildifier)
        ":Params",
    ],
)

ocaml_module(
    name = "Params",
    src = "params.ml",
    ns_module = ":Sponge_ns",
    opts = SPONGE_MODULE_OPTS,
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps = SPONGE_DEPS,
)

ocaml_module(
    name = "Sponge",
    src = "sponge.ml",
    intf = ":_Sponge",
    ns_module = ":Sponge_ns",
    opts = SPONGE_MODULE_OPTS,
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps = SPONGE_DEPS + [
        # do not sort (buildifier)
        ":Constants",
        ":Intf",
        ":Params",
    ],
)

ocaml_interface(
    name = "_Sponge",
    src = "sponge.mli",
    ns_module = ":Sponge_ns",
    opts = SPONGE_INTERFACE_OPTS,
    ppx = SPONGE_PPX,
    ppx_args = SPONGE_PPX_ARGS,
    deps = SPONGE_DEPS + [
        # do not sort (buildifier)
        ":Intf",
        ":Params",
    ],
)

################################################################
#### Package CLI Options
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)
