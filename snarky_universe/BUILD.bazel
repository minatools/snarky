## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.
## Dune file: /Users/gar/mina/snarky/snarky_universe/dune

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns_module",
)

## Global Options
load(
    "//bzl:config.bzl",
    "ARCHIVE_OPTS",
    "GLOBAL_CLI_OPTS",
    "INTERFACE_OPTS",
    "MODULE_OPTS",
    "NS_MODULE_OPTS",
)

## Repo Options
load("//bzl/snarky:config.bzl", "SNARKY_OPTS")

PKG_OPTS = GLOBAL_CLI_OPTS + SNARKY_OPTS + []
LIB_1_OPTS = []
LIB_1_ARCHIVE_OPTS = PKG_OPTS + LIB_1_OPTS + ARCHIVE_OPTS
LIB_1_INTERFACE_OPTS = PKG_OPTS + LIB_1_OPTS + INTERFACE_OPTS
LIB_1_MODULE_OPTS = PKG_OPTS + LIB_1_OPTS + MODULE_OPTS
LIB_1_NS_MODULE_OPTS = PKG_OPTS + LIB_1_OPTS + NS_MODULE_OPTS
LIB_1_DEPS = [
    "@opam//pkg:core",
    "@snarky//sponge",
    "@snarky//snarkette",
    "@snarky//snarky_integer",
    "@snarky//snarky_curve",
    "@snarky//snarky_signature",
    "@snarky//src:snarky",
]

PPX_1 = "//bzl/ppx:ppx[ppx_deriving_yojson][ppx_jane][ppx_deriving.eq]"

PPX_1_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "snarky_universe",
]

################################################################
## LIB 1
################################################################
ocaml_archive(
    name = "snarky_universe",
    opts = LIB_1_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [
        # do not sort (buildifier)
        ":Snarky_universe_ns",
        ":Curve",
        ":Group",
        ":Hash",
        ":Input_spec",
        ":Intf",
        ":Membership_proof",
        ":Merkle_tree_unchecked",
        ":Snarky_universe",
    ],
)

ocaml_ns_module(
    name = "Snarky_universe_ns",
    ns = "snarky_universe",
    opts = LIB_1_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "curve.ml",
        "group.ml",
        "hash.ml",
        "input_spec.ml",
        "intf.ml",
        "membership_proof.ml",
        "merkle_tree_unchecked.ml",
        "snarky_universe.ml",
    ],
)

ocaml_module(
    name = "Curve",
    src = "curve.ml",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    deps = LIB_1_DEPS
)

ocaml_module(
    name = "Group",
    src = "group.ml",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    deps = LIB_1_DEPS + [":Curve"]
)

ocaml_module(
    name = "Hash",
    src = "hash.ml",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    deps = LIB_1_DEPS + [":Curve"]
)

ocaml_module(
    name = "Input_spec",
    src = "input_spec.ml",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS
)

ocaml_module(
    name = "Intf",
    src = "intf.ml",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    visibility = ["//visibility:public"],
    deps = LIB_1_DEPS + [":Input_spec"]
)

ocaml_module(
    name = "Membership_proof",
    src = "membership_proof.ml",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    deps = LIB_1_DEPS
)

ocaml_module(
    name = "Merkle_tree_unchecked",
    src = "merkle_tree_unchecked.ml",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    deps = LIB_1_DEPS + [":Membership_proof"]
)

ocaml_module(
    name = "Snarky_universe",
    src = "snarky_universe.ml",
    intf = ":_Snarky_universe",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_MODULE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
    deps = LIB_1_DEPS + [
        ":Curve",
        ":Group",
        ":Hash",
        ":Input_spec",
        ":Intf",
        ":Membership_proof",
        ":Merkle_tree_unchecked"
    ],
)

ocaml_interface(
    name = "_Snarky_universe",
    src = "snarky_universe.mli",
    ns_module = ":Snarky_universe_ns",
    opts = LIB_1_INTERFACE_OPTS,
    ppx = PPX_1,
    ppx_args = PPX_1_ARGS,
     deps = LIB_1_DEPS + [
         ":Curve",
         ":Intf"
    ],
)
