load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_signature",
    "ocaml_module",
    "ocaml_ns_archive",
)

#################
ocaml_ns_archive(
    name = "interval_union",
    submodules = [
        ":_Interval_union"
    ],
    visibility = [
        # "//visibility:public"
        "//src/base:__pkg__"
    ]
)

#############
ocaml_module(
    name   = "_Interval_union",
    struct = "interval_union.ml",
    sig    = ":_Interval_union.cmi",
    ppx = "//bzl/ppx/exe:ppx_jane__ppx_deriving.eq",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "interval_union",
    ],
    deps_opam = ["core_kernel"],
)

################
ocaml_signature(
    name = "_Interval_union.cmi",
    src = "interval_union.mli",
    ppx = "//bzl/ppx/exe:ppx_jane__ppx_deriving.eq",
    ppx_args = [
        # do not sort (buildifier)
        "-inline-test-lib",
        "interval_union",
    ],
    deps_opam = ["core_kernel"]
)
